#MIN_CONFIG(3.1)

AM_INIT_AUTOMAKE(showimg,0.9.5)

CXXFLAGS="$CXXFLAGS $KDE_DEFAULT_CXXFLAGS"

AC_CHECK_HEADERS(unistd.h sys/param.h floatingpoint.h paths.h)
AC_CHECK_KDEMAXPATHLEN

AC_ARG_VAR(PKGCONFIGFOUND, [Path to pkg-config])
AC_CHECK_PROG(PKGCONFIGFOUND, pkg-config,[yes])

#------------------------------------------------------------------
# Check in .bot if showimg is disabled
#------------------------------------------------------------------
showimg_enabled=yes

#------------------------------------------------------------------
# check for konq_operations.h
#------------------------------------------------------------------
KDE_CHECK_HEADER(konq_operations.h, ,
	AC_MSG_WARN(The file konq_operations.h is needed for ShowImg but is missing. If you use KDE packages please check you have installed the kdebase-devel package.)
	DO_NOT_COMPILE="showimg $DO_NOT_COMPILE"
	showimg_enabled=no
	)
#------------------------------------------------------------------
# check for KIPI
#------------------------------------------------------------------

# check for want_kipi
AC_MSG_CHECKING(if ShowImg should be compiled with KIPI support)
AC_ARG_ENABLE(
	libkipi,
	[  --enable-libkipi        enable KIPI plugin support default=yes],
	[if test "$enableval" = yes; then
		AC_MSG_RESULT(yes)
		want_kipi="yes"
	else
		AC_MSG_RESULT(no)
		want_kipi="no"
		AC_MSG_WARN([KIPI plugin support will not be compiled])
	fi],
	[AC_MSG_RESULT(yes); want_kipi="yes"])

# check for libkipi
if test "$want_kipi" = "yes" ; then
	KDE_CHECK_HEADER(libkipi/interface.h, have_libkipi="yes")
	if test "x$have_libkipi" = "xyes" ;then
		LIBKIPI_CFLAGS=''
		LIBKIPI_LIBS='-lkipi'
		AC_SUBST(LIBKIPI_CFLAGS)
		AC_SUBST(LIBKIPI_LIBS)
		AC_DEFINE(HAVE_KIPI, 1, [If we have enable KIPI])
	fi
fi


#------------------------------------------------------------------
# check for libkexif
#------------------------------------------------------------------
AC_MSG_CHECKING(if ShowImg should be compiled with libkexif support)
AC_ARG_WITH(
	kexif,
	[  --with-kexif            compile the kexif plugins support default=yes],
	[if test "$withval" = yes ; then
		AC_MSG_RESULT(yes)
		want_kexif="yes"
	else
		AC_MSG_RESULT(no)
		want_kexif="no"
	fi],
	[AC_MSG_RESULT(yes); want_kexif="yes"])




if test $want_kexif="yes" ; then
	have_libkexif=no

	#check libkexi >=0.2
	if test "$PKGCONFIGFOUND" = "yes" ; then
		KDE_PKG_CHECK_MODULES(LIBKEXIF, libkexif >= 0.2,
					have_libkexif=yes, have_libkexif=no)
	fi
	
	if test "x$have_libkexif" = "xno"; then
		LIBKEXIF_CFLAGS=""
		LIBKEXIF_LIBS=""
		AC_MSG_RESULT([0.2 not found])
	else
		AC_DEFINE(HAVE_LIBKEXIF, 1, [If we have libkexif])
		AC_DEFINE_UNQUOTED([LIBKEXIF_VERSION], 020, [If we have libkexif 0.2])
		libkexif_version="0.2"
		AC_MSG_RESULT([0.2 found])
	fi

	#check 0.1 <= libkexi <0.2
	if test "x$have_libkexif" = "xno"; then
		KDE_CHECK_HEADER(libkexif/kexif.h, have_libkexif="yes")
		if test "x$have_libkexif" = "xyes"; then
			LIBKEXIF_CFLAGS=""
			LIBKEXIF_LIBS="-lkexif"
			AC_DEFINE(HAVE_LIBKEXIF, 1, [If we have libkexif])
			AC_DEFINE_UNQUOTED([LIBKEXIF_VERSION], 010, [If we have libkexif 0.1])
			libkexif_version="0.1"
			AC_MSG_RESULT([0.1 found])
		else
			LIBKEXIF_CFLAGS=""
			LIBKEXIF_LIBS=""
			AC_MSG_RESULT([0.1 not found])
		fi
	fi
else
	AC_MSG_WARN([libkexif support will not be compiled])
fi

AC_SUBST(LIBKEXIF_CFLAGS)
AC_SUBST(LIBKEXIF_LIBS)


#---------------------------------------------------------
# libexif detection
#---------------------------------------------------------
PKG_CHECK_MODULES([LIBEXIF], [libexif >= 0.5.7],
        have_libexif=yes ,
        have_libexif=no
)

if test "x$have_libexif" = "xyes" ; then
	AC_DEFINE_UNQUOTED([HAVE_LIBEXIF], 1, [If we have libkexif])
fi

AC_SUBST(LIBEXIF_LIBS)
AC_SUBST(LIBEXIF_CFLAGS)


#---------------------------------------------------------
# check for libkexi
#---------------------------------------------------------
AC_MSG_CHECKING(if ShowImg should be compiled with showimgdb support)
AC_ARG_WITH(
	showimgdb,
	[  --with-showimgdb        compile the showimgdb support [default=no]],
	[if test "$withval" = yes ; then
		AC_MSG_RESULT(yes)
		want_showimgdb="yes"
	else
		AC_MSG_RESULT(no)
		want_showimgdb="no"
	fi],
	[AC_MSG_RESULT(no); want_showimgdb="no"])

compile_showimgdb="yes"
if test "x$want_showimgdb" != "xyes" ; then
  compile_showimgdb="no"
fi
AM_CONDITIONAL(compile_showimgdb, test "$compile_showimgdb" = "yes")

if test "x$want_showimgdb" = "xyes" ; then
	LIBKEXIDB_LDDADD='$(top_builddir)/kexi/kexidb/libkexidb.la $(top_builddir)/kexi/kexidb/parser/libkexidbparser.la $(top_builddir)/showimgdb/libshowimgdb.la'
	LIBKEXIDB_LIBS=''
	LIBKEXIDB_CPPFLAGS='-I$(top_builddir)/kexi -I$(top_builddir)/showimgdb'
	AC_DEFINE(WANT_LIBKEXIDB, 1, [If we want kexidb support])
else
	AC_MSG_WARN([kexidb/showimgdb support will not be compiled])
fi
AC_SUBST(LIBKEXIDB_LDDADD)
AC_SUBST(LIBKEXIDB_LIBS)
AC_SUBST(LIBKEXIDB_CPPFLAGS)
