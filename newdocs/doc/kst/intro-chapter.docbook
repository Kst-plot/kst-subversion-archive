<chapter id="introduction">
<title>Introduction</title>

<sect1 id="whatiskst">
<title>What is &kst;?</title>
<para>
&kst; is a data plotting and analysis program.  Some of its features include:
<itemizedlist>
<listitem><para>Robust plotting of live "streaming" data, including support for automated monitoring of events and notification.</para></listitem>
<listitem><para>Powerful plugin and extensions support.</para></listitem>
<listitem><para>A large selection of built-in plotting and analysis functions, including: histograms, equations, curve fitting, filtering, and power spectra.</para></listitem>
<listitem><para>Powerful graphical user interface, with unique view modes for easy plot manipulation.</para></listitem>
<listitem><para>Color mapping and contour mapping capabilities for three-dimensional data.</para></listitem>
<listitem><para>Support for several popular data formats including FITS, netCDF, and HEALPix, as well as delimited plaintext. Additional formats can be accomodated with plugins.</para></listitem>
<listitem><para>KstScript, a JavaScript based scripting language which allows automation of complicated workflows.</para></listitem>
</itemizedlist>
</para>
</sect1>

<sect1 id="gettingstarted">
<title>Getting Started</title>
<para>
This is a brief introductory tutorial to the fundamental features of &kst;. We will cover...
<itemizedlist>
<listitem><para>Importing and plotting raw data</para></listitem>
<listitem><para>Plot manipulation</para></listitem>
<listitem><para>Basic data analysis with &kst;</para></listitem>
</itemizedlist>
</para>

<sect2 id="importingdata">
<title>Importing Data</title>

<para>
Let's start by seeing how raw data can be imported into &kst; as a data object using the graphical interface (this can also be done using the command line, for details see the appendix on  <link linkend="command-lineoptions">Command Line Options</link>).
</para>

<para>
Begin by running &kst;. When you do this for the first time, a "QuickStart" Dialog should appear by default.
</para>

<screenshot>
<screeninfo>QuickStart Dialog</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-quickstartdialog.png" format="PNG" />
</imageobject>
<textobject>
<phrase>QuickStart Dialog Screenshot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
This dialog has a list of your recently opened &kst; sessions, as well as a link to the "Data Wizard". The Data Wizard allows data to be imported into &kst; using the graphical interface. We'll run through using it now. 
</para>

<para>
Click the Data wizard button. A data source dialog will appear which allows you to select a file or network resource (e.g. HTTP address) to use as a data source. &kst; determines format of the source by its extension.
</para>

<para>
We will import data from a file called 'gyrodata.dat' which should be included in your Kst installation. The location of this file is <filename class="directory">$<envar>KDEDIR</envar>/share/apps/kst/tutorial/gyrodata.dat</filename>,
where <filename class="directory">$<envar>KDEDIR</envar></filename> is
the location in which &kde; is installed on your system (you can find
this using the command <command>kde-config --prefix</command>).
</para>

<para>Select 'gyrodata.dat' for opening. &kst; should report the data source as type ASCII, which means that the data is in delimited plain text format. More options can be seen by clicking the 'Configure' button. &kst; will usually autodetect these options. The options for the gyrodata.dat file should be as shown below:
</para>

<screenshot>
<screeninfo>Data Wizard - Configure Data Source Dialog</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizardconfiguredatasourcedialog.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard - Configure Data Source Dialog Screenshot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>Close the Configure Data Source Dialog and click the 'Next' button. This will lead to a pane where you can select the fields from the data source which you'd like to work with. In the case of ASCII data, each field is a column in the text file. Select the data from the 1st, 2nd, and 3rd fields. The INDEX field is a supplementary field created by &kst;. It contains integers from 0 to N-1, where N is the number of frames in the data file. Once you've selected the proper fields, the selection pane should look like this:
</para>

<screenshot>
<screeninfo>Data Wizard - Select Data Dialog</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizardselectdatadialog.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard - Select Data Dialog Screenshot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Click the 'Next' button again, to get to the 'Data Presentation Pane'. This allows you to select some basic and frequently modified options for the plots which are about to be created. 
</para>

<para>
The <guilabel>Data Range</guilabel> section is used to specify the
range of data to read from the selected vectors in the input file. The
following discussion assumes knowledge of <quote>frames</quote>.  In
brief, a frame is simply a number of data samples, and each data file
is composed of a number of frames.  For a detailed description of this
concept, see <xref linkend="supportingadditionalfileformatsdatasourceconceptsframes"/>.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Start</guilabel>, <guilabel>Count from end</guilabel>,
<guilabel>Range</guilabel>, and <guilabel>Read to end</guilabel>
</term>
<listitem>
<para>
Using these four settings, the lower and upper boundaries of the data
range can be set. As an example, select <guilabel>Count from
end</guilabel> and enter 10,000 for <guilabel>Range</guilabel> to read
only the last 10,000 frames.  If <filename>gyrodata.dat</filename> was
being updated in real-time, subsequent additions to the end of the
file would be read.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Read 1 sample per N frames</guilabel> and <guilabel>Boxcar
filter first</guilabel>
</term>
<listitem>
<para>
In addition to the lower and upper range boundaries, the samples to
read from the selected range can be set.  If <guilabel>Read 1 sample
per N frames</guilabel> (where N is the value entered) is not
selected, all samples in the selected range will be read.
Alternatively, frames in the data file can be skipped by selecting
<guilabel>Read 1 sample per N frames</guilabel> For now, deselect
<guilabel>Read 1 sample per N frames</guilabel>.
</para>
</listitem>
</varlistentry>
</variablelist>

<para>
The <guilabel>Plot Type</guilabel> radio buttons provide a quick way to automatically generate power spectra of the data which are being imported. We won't use this feature in the current tutorial, so leave the plot type as <guilabel>XY</guilabel>.
</para>

<para>
The <guilabel>X Axis Vector</guilabel> section lets you select the independent vector for to be used for the plots.  You may select a field from your data file, or the INDEX vector.  Since <filename>gyrodata.dat</filename> does not contain an X axis vector, leave the selection as INDEX.
</para>

<para>
The <guilabel>FFT Options</guilabel> section is available only if a power spectrum is to be plotted.  This tutorial will not deal with the creation of power
spectra, so this section should be disabled. For more information about it's options, you can see the section on <xref linkend="power-spectra"/>.
</para>

<para>
When you're done, the Configure Data Source Pane should look like the following:
</para>

<screenshot>
<screeninfo>Data Wizard - Configure Data Source Pane</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizarddatapresentationpane.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard - Configure Data Source Pane Screenshot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Clicking 'Next' again takes us to the final Data Wizard pane, where there are options to determine the appearance of the plotted data. We can select a curve style, decide whether labels and legends should be generated from the available field names, and decide which plots they the curves should be placed into. Again, the default options should be fine for now.
</para>

<screenshot>
<screeninfo>Data Wizard - Configure Plot Layout Plane</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizardconfigureplotlayoutpane.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard - Configure Plot Layout Pane Screenshot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Now, click the 'Finish' button to generate the plots. Your &kst; session should now look something like this:
</para>

<screenshot>
<screeninfo>Getting Started - Initial Plots</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-gettingstartedinitialplots.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Getting Started - Initial Plots</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Congratulations! You've just done some basic plotting in &kst;. Generating these plots took a bit of effort, so we should save the current &kst; session (it will be used in the next section of this tutorial). Select <guimenuitem>Save As...</guimenuitem> from the <guimenu>File</guimenu> menu, and save the session as
<filename>mykstsession.kst</filename>:
</para>

<screenshot>
<screeninfo>Saving a KST session</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-saveasdialog.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Saving a KST session</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Saving a &kst; session saves all the plots, data objects (you will learn about these later), and layouts that exist
at the time of saving.
</para>
</sect2>

<sect2 id="plotmanipulation">
<title>Plot Manipulation</title>
<para>
Now that you are comfortable with creating plots from imported data in &kst;, we can explore some of the plot manipulation features available through the graphical user interface.
Start &kst; from the command-line with the
<filename>mykstsession.kst</filename> file you saved earlier:
</para>
<screen><userinput><command>kst mykstsession.kst</command></userinput></screen>
<para>
All the plots you created in the <xref linkend="importingdata"/> section should now be loaded in &kst;. Examine the plots with the y axis label of <literal>Column 1</literal>.  To take a closer look at the plot, right click on it and select the <guimenuitem>Maximize</guimenuitem> menu item, as shown below:
</para>
<screenshot>
<screeninfo>Maximizing a plot</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-zoom.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Maximizing a plot</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
The plot you selected will now be maximized within the current window. Note that the
data is still very densely in this plot, so it would be useful to zoom in on an interesting area. To do so, make sure you are in <guimenuitem>XY Mouse ZoomM</guimenuitem> mode (select <guimenuitem>XY Mouse Zoom</guimenuitem> from the <guimenu>Plots</guimenu> menu, or
click the <inlinemediaobject><imageobject><imagedata
fileref="Icon-kst-xymousezoom.png"
format="PNG"/></imageobject></inlinemediaobject> toolbar
button). Then, simply drag a rectangle around the area you're interested in.  Note that the coordinates of the mouse cursor are displayed in
the lower right corner of the &kst; window (if they are not, ensure
that <guimenuitem>Show Statusbar</guimenuitem> is checked in the
<guimenu>Settings</guimenu> menu).
</para>

<para>
The plot axes will change to <quote>zoom in</quote> on the selected area of the plot.  Suppose that you would like to view some data just outside the region you have zoomed into. This can be done with &kst;'s scrolling feature. Right-click on the plot and select <guimenuitem>Up</guimenuitem>, <guimenuitem>Down</guimenuitem>, <guimenuitem>Left</guimenuitem>, or <guimenuitem>Right</guimenuitem> from the <guimenu>Scroll</guimenu> submenu.  The plot will scroll accordingly. Of course, it is usually easier to use the shortcut key associated with the menu item; this is true for most of the zooming and scrolling functions.  The shortcut keys for scrolling are the <keysym>Arrow</keysym> keys, so the quickest way to scroll upwards would be to hold down the <keysym>Up Arrow</keysym> key.  To return to maximum zoom at any time, right-click on the plot and select <guimenuitem>Zoom Maximum</guimenuitem> from the <guisubmenu>Zoom</guisubmenu> submenu (or type <keycap>M</keycap>, the shortcut key associated with <guimenuitem>Zoom Maximum</guimenuitem>).
</para>

<para>
Restore the size of the plot by right-clicking it and unchecking <guimenuitem>Maximize</guimenuitem>.
</para>

<para>
Now look at the plots with y axes labeled <literal>Column 2</literal>
and <literal>Column 3</literal>.  These are plots of the pitch gyro
and roll gyro, respectively, from the 1998 BOOMERANG flight.  Since
these two plots are related, it can be useful to zoom and scroll them
simultaneously.  Click on the squares located at the top right corners
of the two plots.  They should turn gray in color to indicate that
the two plots are now tied together:
</para>

<screenshot>
<screeninfo>Tied Zoom</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-tiedzoom.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Tied Zoom</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Before we try zooming in, we should delete the "Column 1" plot, which we won't be working with any more. Right-click on this plot and select <guimenuitem>Delete</guimenuitem>.  A hole will be left in the plotting window. We can remedy this by right-clicking anywhere inside the window and selecting <guimenuitem>Cleanup Layout->Default Tile</guimenuitem>.  Now the two remaining plots should share maximal space inside the window.  Return to XY Mouse Zoom mode when you are done.
</para>

<para>
Now try zooming in on any portion of the upper plot.  You will find that the lower plot will become blank.  This is because the lower plot axes have changed to match the upper plot axes, and there is no data in that particular region of the lower plot. Type <keycap>M</keycap> while the mouse cursor is over either plot to return to maximum zoom on both plots.  Now hold down <keycap>Ctrl</keycap> (this is
equivalent to selecting <guimenu>X Mouse Zoom Mode</guimenu> from the
<guimenu>Plots</guimenu> menu or clicking the
<inlinemediaobject><imageobject><imagedata
fileref="Icon-kst-xmousezoom.png"
format="PNG"/></imageobject></inlinemediaobject> toolbar button). The mouse cursor will change shape as visual feedback.  While keeping <keycap>Ctrl</keycap> held down, drag a rectangle in the upper plot. Note that the height of the dotted rectangle is restricted so that only the x axis will be zoomed.  Now both plots will display data when zoomed in, as the y axis for either plot was not changed.
</para>
<tip>
<para>
You can quickly tie or untie all the plots in the window by selecting
<guimenuitem>Tied Zoom</guimenuitem> from the <guimenu>Plots</guimenu>
menu or by clicking the <inlinemediaobject><imageobject><imagedata
fileref="Icon-kst-tiedzoom.png"
format="PNG"/></imageobject></inlinemediaobject> toolbar button.
</para>
</tip>
<para>
When you are finished experimenting with the zooming features, you can
save the <filename>mykstsession.kst</filename> file again, with the changes which have been made.
</para>
</sect2>

<sect2 id="basicanalysis">
<title>Basic Analysis and the Data Manager</title>

<para>
There is more to &kst; than simple plotting and viewing of data.  From the data wizard, you have already seen that &kst; has the ability to create power spectra of data. In fact, &kst; is also capable of creating other data objects such as histograms, equations, and plugins. A utility called the Data Manager can help you to do this.
</para>

<para>
Open the data manager now by clicking the <inlinemediaobject><imageobject><imagedata fileref="Icon-kst-datamanager.png"
format="PNG"/></imageobject></inlinemediaobject> toolbar button, or by selecting <guimenuitem>Data Manager</guimenuitem> from the <guimenu>Data</guimenu> menu.
</para>

<screenshot>
<screeninfo>The Data Manager</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datamanager.png" format="PNG" />
</imageobject>
<textobject>
<phrase>The Data Manager</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
The Data Manager contains the definitive list of data objects in the
current &kst; session.  It also allows you edit or create new data
objects.  As you can see, there are currently 3 curves (each created from a
pair of vectors) and four data vectors listed. The Data Manager gives a summary of each data object:
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Name</guilabel>
</term>
<listitem>
<para>
The name of the data object, unique among the set of data objects with the same type.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Type</guilabel>
</term>
<listitem>
<para>
The type of the data object determines how it is created and what its options are. Type can be: Data Vector, Curve, Equation, Histogram, Power Spectrum, Plugin, Event Monitor, Matrix, Image, or CSD.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Used</guilabel>
</term>
<listitem>
<para>
This field gives the status of the data object. If there is a check mark in the Used column of a data object then some other object in &kst; is dependent on it. For example, we can see that the Curve object '1' is unusued, because we deleted its plot earlier. Data Vector '1', however, is still in use because it is required by the Curve object. 
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Samples</guilabel>
</term>
<listitem>
<para>
The number of elements in the data object. This is proportional to the amount of memory which the data object requires.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Properties</guilabel>
</term>
<listitem>
<para>
A summary of the data object's key parameters, dependent on its type.
</para>
</listitem>
</varlistentry>
</variablelist>

<para>
We saw earlier when we attempted tied-zoom in XY-Zoom-Mode that the Column 2 and Column 3 data have different y-offsets. Suppose that we would like to compare them on the same graph. To do this, we will have to shift the mean of one of the plots. We can do this easily using an Equation Object.
</para>

<para>
Begin the process of creating an Equation Object by clicking the corresponding button on the left hand side of the Data Manager. A dialog will appear to configure the new object.
</para>

<para>
The <guilabel>Plot Type</guilabel> radio buttons provide a quick way to automatically generate power spectra of the data which are being imported. We won't use this feature in the current tutorial, so leave the plot type as <guilabel>XY</guilabel>.
</para>

<para>
The <guilabel>Appearance</guilabel> and <guilabel>Placement</guilabel> sets of options allow you to choose settings for the curve which will be automatically created from the equation object. Set the curve to be placed in the existing plot, P3- this is the "Column 3" plot.
</para>

<para>
The <guilabel>Equation</guilabel> group of options are unique to equation objects. Components of the equation can be typed in, or inserted from selections made in the drop-down menus above. Enter the equation shown below:
</para>

<screenshot>
<screeninfo>New Equation</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-newequation.png" format="PNG" />
</imageobject>
<textobject>
<phrase>New Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
This equation takes values from the data vector [2], subtracts the scalar [2-mean], then adds the scalar [3-mean] to make a new vector which is [2] shifted vertically to have the same mean as the data vector [3]. Note from the Scalars drop-down menu that &kst; maintains a collection of simple statistics on all of its vectors (as well as many other objects). These can frequently prove useful.
</para>

<para>
Click the OK button of the New Equation dialog. Now a new curve has been added to the plot with y-axis label 'Column 3'. If we return to the &kst; plot window, we can zoom in on the 'Column 3' plot. Comparing the data, we can see what we suspected, that data vector [2] is essentially the same as [3], but perfectly out of phase:
</para>

<screenshot>
<screeninfo>New Equation</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-gettingstartedfinalplots.png" format="PNG" />
</imageobject>
<textobject>
<phrase>New Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
This concludes our basic introduction to &kst;. We encourage you to experiment with the program now, there is clearly a lot of functionality in &kst; which hasn't been covered in this tutorial. Most of it can be found intuitively. You may want to look at some of the entries in the <xref linkend="common-tasks"/> section. Good luck!
</para>

</sect2>
</sect1>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:0
sgml-indent-data:true
sgml-parent-document:("index.docbook" "book" "chapter")
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
