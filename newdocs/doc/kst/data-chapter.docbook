<chapter id="workingwithdata">
<title>Working With Data</title>

<sect1 id="datasourceconcepts">
<title>Data Source Concepts</title>
<para>
A data source in &kst; is simply a supported data file.
The following concepts are important in understanding how &kst; works with
data sources which provide vectors.
Some terminology is also introduced in this section.
</para>

<variablelist>

<varlistentry>
<term>Samples</term>
<listitem>
<para>
A sample is considered to be the fundamental unit with respect to data files.
Each sample consists of one data value in the file.  Note, however, that one sample
may not correspond to one value in a data vector in &kst;, due to the concept of
<link linkend="datasourceconceptsframes">frames</link>.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>Fields</term>
<listitem>
<para>
A field usually corresponds to one vector in &kst;.  For example, a column in an
ASCII data file is considered to be one field.  Each field can have an explicit
or implicit name.  Datasource readers provide functions for reading and obtaining
fields and field names.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term id="datasourceconceptsframes">Frames</term>
<listitem>
<para>
A frame corresponds to a set number of samples, and each field in a data file
can have its own ratio of samples per frame.  The size of a data file
is measured by the number of frames it contains.  For ASCII data files, the number of samples
per frame is 1, but for some data files, there may be multiple samples per frame.  In the below
illustration, the first 3 frames of an imaginary data file are shown.  In this particular data
file, Field 1 has a ratio of 5 samples per frame, Field 2 has a ratio of 2 samples per frame,
Field 3 has a ratio of 3 samples per frame, and Field 4 has a ratio of 1 sample per frame.
</para>

<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-kst-frames.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

<para>
Depending on the specific data vector settings in &kst;, data from files may be read as frames instead of samples, with either the first sample in a frame or the mean of all the samples in a frame representing the value of the frame. This capability can be useful for reducing extremely large data-sets to a more manageable size.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>INDEX field</term>
<listitem>
<para>
Some data files may not have a field that represents the x axis of a plot. However, &kst;
implicitly creates an INDEX field for all data sources.  The INDEX field simply contains
integers from 0 to N-1, where N is the number of frames in the data file.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect1>

<sect1 id="datawizard">
<title>The Data Wizard</title>

<para>
The Data Wizard provides a graphical quick and easy way of importing data into &kst;- automatically creating vectors, curves, power spectra, and plots. To launch the wizard, select <guimenuitem>Data Wizard</guimenuitem> from the <guimenu>Tools</guimenu> menu.  You will be prompted to select a data source.  Browse to a valid data file (or enter in the path to a data file) and click <guibutton>Next</guibutton>.  The following window will be displayed.
</para>

<sect2 id="datawizardselectdatafile">
<title>Selecting Data</title>

<screenshot>
<screeninfo>Data Wizard Select Data Dialog</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizardselectdatadialog.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard Select Data Dialog</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
Here you can select the fields you wish to import into &kst;.  You may filter the list of fields by entering a string to match (wildcards such as <literal>*</literal> are supported) into the text box above the list. Click the <guibutton>Next</guibutton> button to come to the Data Presentation pane.
</para>

</sect2>
<sect2 id="datawizardpresentation">
<title>Presentation</title>

<screenshot>
<screeninfo>Data Wizard Data Presentation Pane</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizarddatapresentationpane.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard Data Presentation Pane</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
The <guilabel>Data Range</guilabel> section is used to specify the range of data to read from the selected vectors in the input file. The following discussion assumes knowledge of <quote>frames</quote>.  For a detailed description of this concept, see <link linkend="fileformats">File Formats</link>.
</para>
<variablelist>
<varlistentry>
<term>
<guilabel>Starting frame</guilabel>, <guilabel>Count from end</guilabel>,
<guilabel>Number of frames</guilabel>, and <guilabel>Read to end</guilabel>
</term>
<listitem>
<para>
Using these four settings, the lower and upper boundaries of
the data range can be set. For example, to read from frame 10 to frame 900, enter <userinput>10</userinput> for
<guilabel>Starting frame</guilabel> and <userinput>890</userinput> for <guilabel>Number of frames</guilabel>.
To read from frame 500 to the end of the file, enter <userinput>500</userinput> for <guilabel>Starting frame</guilabel>
and select the <guilabel>Read to end</guilabel> option. To read only the last 450 frames from the file, select the
<guilabel>Count from end</guilabel> option and enter <userinput>450</userinput> for <guilabel>Number of frames</guilabel>.
The combinations used in the previous two examples are often useful for reading data
from a file that is being updated in real time.  Subsequent additions to the file are read, causing associated
vectors to be updated as well.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Read 1 sample per N frames</guilabel> and <guilabel>Boxcar filter first</guilabel>
</term>
<listitem>
<para>
In addition to the lower and upper range boundaries, the samples to read from the selected range can be set.
If <guilabel>Read 1 sample per N frames</guilabel> (where N is the entered value) is not selected,
all samples in the selected range will be read.
Alternatively, frames in the data file can be skipped by selecting <guilabel>Read 1 sample per N frames</guilabel>
The value of the 1 sample that is used to represent a frame depends on whether or not
<guilabel>Boxcar filter first</guilabel> is selected.  If <guilabel>Boxcar filter first</guilabel> is not selected,
the value is the same as the value of the 1st sample in the frame. If <guilabel>Boxcar filter first</guilabel>
is selected, the value is the mean (average) of all the samples in that particular frame.
</para>
</listitem>
</varlistentry>
</variablelist>

<para>
Power Spectrum and X axis settings can be specified within the <guilabel>Plot Types</guilabel> section.
These settings are described below.
</para>

<variablelist>

<varlistentry>
<term>
<guilabel>XY</guilabel>, <guilabel>Power Spectrum</guilabel>, and <guilabel>XY and Power Spectrum</guilabel>
</term>
<listitem>
<para>
Select whether to plot the power spectrum only, data (XY) only, or both.  If the power spectrum is selected for
plotting, additional settings in this section become available.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>X Axis Vector</guilabel>
</term>
<listitem>
<para>
The vector to be used as the independent vector for the plots.  You may select a field from your
data file, or the INDEX vector.  The INDEX
vector is simply a vector containing elements from 0 to N-1, where N is the number of frames in the
data file.
</para>
</listitem>
</varlistentry>

</variablelist>

<para>
The <guilabel>FFT Options</guilabel> subsection
 in the <guilabel>Plot Types</guilabel> section is available only if a power spectrum
is to be plotted. Detailed information on these options can be found in the <link linkend="power-spectra">Power Spectra</link> section.
</para>

<para>
Once you are satisfied with all the settings, click <guibutton>Next</guibutton> to advance to advance to the final
window.
</para>

</sect2>
<sect2 id="datawizardconfigureplotlayout">
<title>Configure Plot Layout</title>

<screenshot>
<screeninfo>Data Wizard Configure Plot Layout</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datawizardconfigureplotlayoutpane.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Data Wizard Configure Plot Layout</phrase>
</textobject>
</mediaobject>
</screenshot>

<para>
From here, you can change general plotting settings.  Most of the settings are self-explanatory.
A brief overview of each section is provided below.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Curve Style</guilabel>
</term>
<listitem>
<para>
Select whether to plot data points only, lines connecting the data points only, or both.
By default, lines are continuous with weight 0, and data points are marked using crosses.
Line and data point colours are chosen so that curves with identical colours are minimized.
Note that the curve style settings apply to both Power Spectra
and XY plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Curve Placement</guilabel>
</term>
<listitem>
<para>
Select the plots to place the new curves on.  <guilabel>Cycle through</guilabel> distributes the
curves on the plots by cycling through the plots.  Note that the curve placement settings apply
to both Power Spectra and XY plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Label Generation</guilabel>
</term>
<listitem>
<para>
Select the desired labels and legends to be placed on the plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Plot Placement</guilabel>
</term>
<listitem>
<para>
Select the desired window(s) to place the new plots on.  New windows can be created for the plots by selecting
<guilabel>In new window</guilabel>.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Power Spectrum Axis Mode</guilabel>
</term>
<listitem>
<para>
Select these check-boxes if you would like the automatically created power spectra to have logarithmic X or Y axes.
</para>
</listitem>
</varlistentry>

</variablelist>

<para>
Once you are satisfied with all the settings, click <guibutton>Finish</guibutton> and the plots will be generated.
</para>
</sect2>
</sect1>

<sect1 id="datatypes">
<title>Data Types</title>

<para>
There are ten main types of data objects in &kst;.  Data objects can contain other data objects as 'slave objects', as represented by the tree structure view in the Data Manager.  The following diagram illustrates the relationships between the different data types.
</para>

<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-kst-datatypes.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>&kst; Data Types</phrase>
</textobject>
</inlinemediaobject>
</para>

<para>
As can be seen from the above diagram, the only truly 'plottable' data objects are curves and images. Curve objects are typically auto-created from the slave vector of many data objects, however- so these data objects are effectively plottable as well.  All data objects (other than vectors) have the capability of using vectors. Equations, power spectra, events, CSDs, and plugins all contain slave vectors in which they store their results.
</para>

<para>
Descriptions of each data type are provided below, along with overviews of the settings and options
available when creating or editing each type of data object.  Settings common to almost all data types have been
omitted&mdash;see <link linkend="creatingdata">Creating New Data Objects</link> for more information.
</para>

<sect2 id="vectors">
<title>Vectors</title>
<para>
Vectors are one of the most often-used data objects in &kst;.  As their name implies, vectors are simply ordered
lists of numbers.  Most often they contain the x or y coordinates of a set of data points.
</para>
<!-- TODO: This doesn't seem to be the case here. Check -->
<para>
As vectors can be potentially quite large, it is a good idea to be aware of the amount of memory &kst; has
allocated for use.  The current available memory is displayed in the lower right corner of the status bar
of the main &kst; window.
</para>
<tip>
<para>
If the status bar is not available, ensure that <guimenuitem>Show Statusbar</guimenuitem> is checked
in the <guimenu>Settings</guimenu> menu.
</para>
</tip>

<para>
The following is a screenshot of the window displayed when creating or editing vectors.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Vectors</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-vectorwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Vectors</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="datavectorparameters">
<title>Data Vector Parameters</title>
<para>
The source file and field to read can be set using the following options.
</para>
<variablelist>

<varlistentry>
<term>
<guilabel>File name</guilabel>
</term>
<listitem>
<para>
The path to the desired data file.  Clicking the button to the right displays a file browser
window that can be used to graphically browse to the file.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Field or column</guilabel>
</term>
<listitem>
<para>
The field or column to create a vector from.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="datarange">
<title>Data Range</title>
<para>
This section specifies the range of data to use from the selected field for the data vector.
</para>
<variablelist>
<varlistentry>
<term>
<guilabel>Start frame</guilabel>, <guilabel>Count from end</guilabel>,
<guilabel>Range</guilabel>, and <guilabel>Read to end</guilabel>
</term>
<listitem>
<para>
Using these four settings, the lower and upper boundaries of the data range can be set. For example, to read from frame 10 to frame 900, enter <userinput>10</userinput> for <guilabel>Start frame</guilabel> and <userinput>890</userinput> for <guilabel>Range</guilabel>. To read from frame 500 to the end of the file, enter <userinput>500</userinput> for <guilabel>Start frame</guilabel> and select the <guilabel>Read to end</guilabel> option. To read only the last 450 frames from the file, select the <guilabel>Count from end</guilabel> option and enter <userinput>450</userinput> for <guilabel>Range</guilabel>. The combinations used in the previous two examples are often useful for reading data from a file that is being updated in real time. Subsequent additions to the file are read, causing associated vectors to be updated as well.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Read 1 sample per</guilabel> and <guilabel>Boxcar filter first</guilabel>
</term>
<listitem>
<para>
In addition to the lower and upper range boundaries, the samples to read from the selected range can be set.
If <guilabel>Read 1 sample per</guilabel> is not selected, all samples in the selected range will be read.
If <guilabel>Read 1 sample per</guilabel> is selected, only 1 sample per <literal>N</literal> frames will be read,
where <literal>N</literal> is the number entered in selection box to the right.
The value of the 1 sample that is used to represent a frame depends on whether or not
<guilabel>Boxcar filter first</guilabel> is selected.  If <guilabel>Boxcar filter first</guilabel> is not selected,
the value is the same as the value of the 1st sample in the frame. If <guilabel>Boxcar filter first</guilabel>
is selected, the value is the mean (average) of all the samples in that particular frame.
</para>
</listitem>
</varlistentry>
</variablelist>

</sect3>
</sect2>

<sect2 id="curves">
<title>Curves</title>
<para>
Curves are primarily used to create plottable objects from vectors.  Curves are created from two vectors - an <quote>X axis vector</quote> and a <quote>Y axis vector</quote>, that presumably provide a set of data points.  Thus, a curve can be thought
of as a set of data points and the lines that connect them (even though the points or lines may not be visible on plots).
</para>
<para>
The following is a screenshot of the window displayed when creating or editing curves.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Curves</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-curvewindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Curves</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="curvecontents">
<title>Curve Contents</title>
<para>
The contents of the curve can be set from this section.
</para>
<variablelist>
<varlistentry>
<term>
<guilabel>X axis vector</guilabel>
</term>
<listitem>
<para>
The vector to use for the independent (horizontal) axis.
</para>
</listitem>

</varlistentry>

<varlistentry>
<term>
<guilabel>Y axis vector</guilabel>
</term>
<listitem>
<para>
The vector to use for the dependent (vertical) axis.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>+X error bar</guilabel> and <guilabel>+Y error bar</guilabel>
</term>
<listitem>
<para>
The vectors containing error values corresponding to the X axis vector and Y axis vector, respectively.
The vectors should contain the sizes of the error bars in the same order as the data points.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Use +<replaceable>X/Y</replaceable> error bar for
-<replaceable>X/Y</replaceable></guilabel></term> <listitem><para>If
this item is checked, the error bars are drawn symmetrically about the
data point. To draw asymmetric error bars in the x or y direction,
uncheck the box, and choose a vector for the length of the error bar
below the data point in the <guilabel>-<replaceable>X/Y</replaceable>
error bar</guilabel> combo box.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>-<replaceable>X/Y</replaceable> error
bar</guilabel></term>
<listitem><para>The vector to use for the error bar below the data
point. See the previous entry for more detail on using asymmetric
error bars.</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>
</sect2>

<sect2 id="equations">
<title>Equations</title>
<para>
An equation data object consists of a mathematical expression and an independent variable.  The expression
is built using a combination of scalars, vectors, and operators, and usually represents the values of the
dependent variable.  The independent variable is generated from an existing vector, and stored as a slave vector along with the evaluated results of the equation.
</para>
<para>
The following is a screenshot of the window displayed when creating or editing equations.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Equation</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-equationwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<variablelist>
<varlistentry>
<term>
<guilabel>Operators</guilabel>
</term>
<listitem>
<para>
A list of available operators.  Choosing an operator from the list inserts the operator at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Vectors</guilabel>
</term>
<listitem>
<para>
A list of the current vector objects in &kst;.  Choosing a vector from the list inserts the vector at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Scalars</guilabel>
</term>
<listitem>
<para>
A list of the available scalar values.  This list is composed of both the scalar values in the current &kst;
session as well as some built-in constants.  Choosing a scalar from the list inserts the scalar at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Equation</guilabel>
</term>
<listitem>
<para>
The mathematical expression representing the independent variable.  You may manually type in this text box or
you may select items to insert using the above drop-down lists.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>X Vector</guilabel>
</term>
<listitem>
<para>
Select this option to use an existing vector as the independent variable. Select a vector from the
drop-down list, or quickly create a new one by clicking the wizard button to the right.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Interpolate to highest resolution vector</guilabel>
</term>
<listitem>
<para>
Selecting this option interpolates the selected X vector to the greatest number of samples possible, given the data used in the equation expression. For example, if the data expression acts on a vector Y which contains twice as many variables as the selected X vector, the equation object will create a slave vector of interpolated X values with the same # of points as Y.
</para>
</listitem>
</varlistentry>

</variablelist>
</sect2>

<sect2 id="Histograms">
<title>Histograms</title>
<para>
This object calculates the histogram of a chosen vector. 
</para>
<para>
The following is a screenshot of the histogram specific options when creating or editing histograms.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Histogram</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-histogramwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="histogramproperties">
<title>Histogram Properties</title>
<para>
The source vector, as well as basic histogram properties, can be modified from this section.
You can either manually specify settings or use the <guibutton>Auto Bin</guibutton> button.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Data vector</guilabel>
</term>
<listitem>
<para>
The data vector to create the histogram from.  Although a vector is needed to create a histogram, the
vector is treated as an unordered set for the purposes of creating a histogram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>From</guilabel> and <guilabel>to</guilabel>
</term>
<listitem>
<para>
The <guilabel>From</guilabel> field contains the left bound for the leftmost bin in the histogram.
The <guilabel>to</guilabel> field contains the right bound for the rightmost bin in the histogram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Num bins</guilabel>
</term>
<listitem>
<para>
Enter the total number of bins to use in the <guilabel>Num bins</guilabel> field.

</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Auto Bin</guibutton>
</term>
<listitem>
<para>
Instead of specifying values for <guilabel>From</guilabel>, <guilabel>to</guilabel>, and
<guilabel>Num bins</guilabel>, you can click <guibutton>Auto Bin</guibutton> to automatically generate
values for all three fields based based on the lowest and highest values, as well as the number
of elements found in the source vector.
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>


<sect3 id="yaxisnormalization">
<title>Y Axis Normalization</title>
<para>
This section is used to specify the type of normalization used for the y axis of the histogram.
</para>
<variablelist>

<varlistentry>
<term>
<guilabel>Number in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the number of elements in each bin.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Fraction in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the fraction of elements in each bin
out of the total number of elements.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Percent in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the percentage of elements (out of the total
number of elements) in each bin.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Peak bin = 1.0</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the number of elements in each bin divided by
the number of elements in the largest bin (the bin with the greatest number of elements).
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>


</sect2>

<sect2 id="power-spectra">
<title>Power Spectra</title>
<para>
The below definitions assume basic knowledge of power spectra&mdash;for further details, refer to "Numerical Recipes in C: The Art of Scientific Computing", published by Cambridge University Press.
</para>
<para>
A power spectrum data object represents the power spectrum of a vector, defined as
<quote>the square root of the absolute value of the
mean of the interleaved Fast Fourier Transforms of length <literal>2^x</literal> of the vector</quote>, where x is the
value entered in the <guilabel>FFT Length</guilabel> selection box. 
<!--- FIXME: we need a clearer definition of the power spectrum. this should be done after the code in PSDcalculator has been documented. -->
</para>

<screenshot>
<screeninfo>Power Spectra Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-powerspectrawindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Power Spectra Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="powerspectracurvecontents">
<title>Curve Contents</title>
<para>
The source vector for the power spectrum can be modified from this section.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Data vector</guilabel>
</term>
<listitem>
<para>
The data vector to create a power spectrum from.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="powerspectrafftoptions">
<title>FFT Options</title>
<para>
The basic settings for the FFT can be configured here.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Apodize, Function, and Sigma</guilabel>
</term>
<listitem>
<para>
If this option is selected, the data is apodized using a the window function selected from the drop-down menu at right. Apodization can be used to reduce bin-to-bin leakage. If a Gaussian apodization function is chosen, then a sigma value may also be entered to define its effective width.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Remove Mean</guilabel>
</term>
<listitem>
<para>
Select this option to remove the mean from the selected data (i.e. translate the data so that the mean is zero).
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Interleaved average</guilabel> and <guilabel>FFT Length</guilabel>
</term>
<listitem>
<para>
Selecting <guilabel>Interleaved average</guilabel> allows the length of the interleaved Fast Fourier
Transforms to be specified.  The length is specified as a power of 2. If <guilabel>Interleaved average</guilabel> is unchecked, &kst; will choose the smallest possible FFT length which is greater than the data vector length.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Interpolate Over Holes</guilabel>
</term>
<listitem>
<para>
If the data vector contains NaN values, then selecting this option will cause &kst; to interpolate through them when calculating the power spectrum.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Sample rate</guibutton>
</term>
<listitem>
<para>
This is the number of data vector samples per unit time.
The sample rate is used to generate the X axis of power spectrum plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Vector units</guilabel> and <guilabel>Rate units</guilabel>
</term>
<listitem>
<para>
The units specified in these textboxes are used for the purpose of auto-generating axes labels for the plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Output</guilabel>
</term>
<listitem>
<para>
The option selected from this drop-down menu determines which variant of the fundamental power spectrum should be computed. The amplitude spectrum is calculated by taking the square root of the power spectrum. Spectral densitites are calculated by multiplying the Power or Amplitude Spectra by the number of data samples divided by the sample rate entered above.
<!--- FIXME: improve this once a clear definition of the power spectrum itself has been entered at the start of this section. -->
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2>

<sect2 id="spectrogram">
<title>Spectrogram</title>
<para>
A spectrogram is a way to plot the frequency spectrum of a data vector as a function of position within the data. It allows you to visualize, for example, how the frequencies of a signal change with time. In &kst; the spectrogram data object takes a data vector as an input and produces an image object which can be displayed as a 'waterfall' plot. An example is shown in the screenshot below. This is a spectrogram from one day of data from a channel of the WMAP satellite. The size of the intervals over which frequency has been chosen so that each interval corresponds to 1/2 hour of data. The 1h periodic precession of the satellite about its spin axis can be clearly seen. Also, at ~0.007Hz the red lines at the bottom of the image show the much faster (.5rpm) spin frequency of the satellite.
</para>
<screenshot>
<screeninfo>Spectrogram Example</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-spectrogram.png" format="PNG" />
</imageobject>
</mediaobject>
</screenshot>

<para>
Here is the edit dialog for the spectrogram object. 
</para>

<screenshot>
<screeninfo>New Spectrogram Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-spectrogramnew.png" format="PNG" />
</imageobject>
</mediaobject>
</screenshot>

<para>
An explanation of the spectrogram specific options is given below:
</para>

<variablelist>
<varlistentry>
<term>
Window Size
</term>
<listitem>
<para>
The length of the data over which to take the spectra. The data vector will be subdivided into intervals of this length, and a spectrum will be computed for each one.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
FFT Options
</term>
<listitem>
<para>
These are the options for the individual spectra. See the <link linkend="powerspectrafftoptions">FFT Options</link> of the <link linkend="power-spectra">Spectrum</link> data object for more information.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
Color Palette
</term>
<listitem>
<para>
Here you can choose the color scheme to use for the spectrogram. The amplitudes of the spectra are color-coded according to the selected scheme.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect2>

<sect2 id="plugins">
<title>Plugins</title>
<para>
A plugin data object represents a &kst; plugin.  All plugins have a common format, and show up as type <quote>Plugin</quote>
in the Data Manager.  For more information about plugins, please see <link linkend="pluginsandfilters">Plugins and Filters</link>
</para>
</sect2>

<sect2 id="events">
<title>Event Monitors</title>
<para>
An event monitor data object essentially keeps track of one or more vectors
or scalars, and performs a specified action when a specified condition involving the vectors or scalars is true.
Event monitors are usually used in conjunction with <quote>live</quote>, or streaming data. For example, an event monitor
could be created to monitor whether or not elements of a data vector representing temperature exceed a predefined value.
</para>

<para>
You can create a new event monitor using the <guimenuitem>New Event Monitor...</guimenuitem> item in the <guimenu>Data</guimenu> menu, or by using the <link linkend="datamanager">Data Manager</link>.
</para>

<para>
The following is a screenshot of the window displayed when creating or editing events. Explanations of the settings are given below.
</para>

<screenshot>
<screeninfo>Event Monitor Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-eventmonitor.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Event Monitor Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="eventsexpression">
<title>Expression</title>
<para>
The condition to monitor for, along with other event properties, can be modified in this section.
</para>

<!-- FIXME: remove this junk -->
<variablelist>

<varlistentry>
<term>
<guilabel>Expression</guilabel>
</term>
<listitem>
<para>
The expression to monitor.  You may type directly in this textbox, or select items to insert using the operator, vector, and scalar drop-down lists.  Ensure that the expression entered in this textbox is a boolean expression (i.e. it evaluates to either true or false).  This usually entails using an equality or inequality in the expression.  Note that vectors entered in the textbox will be monitored according to their individual elements.
</para>
<para>
Whenever this expression is true (evaluates to 1), the event will be triggered.  The action taken upon an event trigger depends on the settings specified in the next two sections.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Description</guilabel>
</term>
<listitem>
<para>
This textbox is used to store a short description of the event.  The description is primarily available as a method for keeping track of multiple events.  You can enter any text you wish in this textbox.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="eventskstdebuglog">
<title>Kst Debug Log</title>
<para>
This section specifies settings for entries added to the &kst; debug log when events are triggered.
</para>
<variablelist>
<varlistentry>
<term><guilabel>Log as:</guilabel></term>
<listitem>
<para>
Enable this checkbox to have entries added to the &kst; debug log when this event is triggered.
There are three types of entries in the debug log&mdash;notices, warnings, and errors.
Select the desired type of entry using the corresponding radio button.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="eventsemailnotification">
<title>E-Mail Notification</title>
<para>
In this section, settings for sending e-mail notifications of event triggers can be specified.
</para>

<variablelist>
<varlistentry>
<term><guilabel>Notify</guilabel></term>
<listitem>
<para>
Enable this checkbox to have &kst; send e-mail notifications to the specified address when this
event is triggered. General E-mail configuration options are available in the &kst; Settings dialog.
<!-- FIXME: document the settings dialog -->
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="eventselog">
<title>E-Log</title>
<para>
&kst; supports adding entries to an ELOG logbook upon event triggers.  This can be useful for remotely
monitoring live data, or for obtaining summaries of event activity. Please see the <xref linkend="elogextension"/> section for more information.
<!-- FIXME: should this be disabled if ELOG isn't present? -->
</para>
</sect3>

</sect2>


<sect2 id="arrays">
<title>Matrices</title>
<para>
A matrix represents a set of three-dimensional data points (x, y, z) arranged in a two-dimensional grid.
The z values of the matrix are obtained from a vector, and the grid structure is manually specified using
the Edit or New Matrix dialog.  The descriptions below refer to the following diagram depicting
&kst;'s matrix structure.
</para>
<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-kst-matrix.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>
<para>
A screenshot and explanation of the matrix dialog follow.
</para>
<screenshot>
<screeninfo>Matrix Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-matrixwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Matrix Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="arrayvectorselection">
<title>Vector Selection</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Z Vector</guilabel>
</term>
<listitem>
<para>
The data vector to obtain the z values from.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="arraygridparameters">
<title>Grid Parameters</title>

<variablelist>
<varlistentry>
<term>
<guilabel>X Minimum</guilabel> and <guilabel>Y Minimum</guilabel>
</term>
<listitem>
<para>
The origin of the matrix is specified by the coordinates (X Minimum, Y Minimum).
The location of the origin is represented by a red circle in the above diagram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>X Step Size</guilabel> and <guilabel>Y Step Size</guilabel>
</term>
<listitem>
<para>
These two values specify the dimensions of each rectangular cell in the matrix grid. All cells
in the matrix have identical dimensions.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Dimensions</guilabel> and <guilabel>Use maximum x length</guilabel>
</term>
<listitem>
<para>
Enter the number of steps for the x dimension of the matrix, followed by the number of
steps for the y dimension of the matrix.  If <guilabel>Use maximum x length</guilabel> is
checked, the x dimension of the matrix will be determined based on the length of the vector
and the entered y dimension.  If this option is checked and the length of the vector
subsequently changes, the x dimension of the matrix will be updated accordingly.
</para>
<para>
Note that the minimum allowed y dimension is 1, while the minimum allowed x dimension is 0.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>

<sect2 id="images">
<title>Images</title>
<para>
Images are graphical representations of <link linkend="arrays">Matrices</link>.  Images can be plotted
as color maps, contour maps, or both.
</para>
<screenshot>
<screeninfo>Image Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-imagewindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Image Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="imagearrayselection">
<title>Matrix Selection</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Matrix Selection</guilabel>
</term>
<listitem>
<para>
Select the matrix to use for this image.  New matrices can be created or edited by clicking buttons to the right.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imageimagetype">
<title>Image Type</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Color Map</guilabel>, <guilabel>Contour Map</guilabel>, and <guilabel>Color Map and Contour Map</guilabel>
</term>
<listitem>
<para>
Select the type of image to be plotted. Changing this selection enables or disables sections of the image dialog
as appropriate.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imagecolormapparameters">
<title>Color Map Parameters</title>
<para>
A color map represents the z value of each cell in the matrix using a color. This section is only available
if either <guilabel>Color Map</guilabel> or <guilabel>Color Map and Contour Map</guilabel> is selected under
<guilabel>Image Type</guilabel>.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Color palette</guilabel>
</term>
<listitem>
<para>
Select the color palette to use for the color map. By default, two palettes suitable for color maps are installed
by &kst;&mdash;Kst Grayscale 256 (a 256 color grayscale palette) and Kst Spectrum 1021 (a 1021 color rainbow
spectrum that ranges from blue to red). Additional palettes can be installed by simply copying
<productname>GIMP</productname> compatible palette files to the <filename>colors</filename> subdirectory of
the user configuration directory (for example, <filename>/usr/share/config/colors/</filename>).  Note that
saved images using a non-default palette may not be viewable by other users of &kst; if they do not have
the required palette. In such cases, a default grayscale palette is used instead.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Threshold-</guilabel> <guilabel>Lower</guilabel> and <guilabel>Upper</guilabel>
</term>
<listitem>
<para>
Enter the lower and upper thresholds to use for the mapping of colors.  Palette colors are evenly distributed
between the lower and upper thresholds.  Any cells in the
selected matrix with z values less than the lower threshold are mapped to the first color in the palette.
Any cells in the selected matrix with z values greater than the upper threshold are mapped
to the last color in the palette.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Max/Min</guilabel>
</term>
<listitem>
<para>
Clicking this button causes the lower and upper threshold values to be set to the current minimum and maximum z values of the selected matrix.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Smart</guilabel> and <guilabel>Percentile</guilabel>
</term>
<listitem>
<para>
Clicking the <guilabel>Smart</guilabel> button causes the lower and upper threshold values to be set such that the percentage of z values in the selected matrix contained between them is equal to the value in the percentile numberbox.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Real-time auto threshold</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the lower and upper threshold values to be always set to the minimum and maximum of the z values for the selected matrix, even when the matrix updates.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imagecontourmapparameters">
<title>Contour Map Parameters</title>
<para>
A contour map draws a set of lines, with each line representing a particular z value. This section is only available
if <guilabel>Contour Map</guilabel> or <guilabel>Color Map and Contour Map</guilabel> is selected under
<guilabel>Image Type</guilabel>.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Number of contour levels</guilabel>
</term>
<listitem>
<para>
Select the number of contour levels to use.  The contour levels will be distributed evenly between the lowest
and highest z values found in the matrix.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Color</guibutton>
</term>
<listitem>
<para>
Select the color to use for the contour lines.  Clicking this button displays a standard &kde; color chooser
dialog.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Weight</guilabel> and <guilabel>Use variable line weight</guilabel>
</term>
<listitem>
<para>
Select the weight, or <quote>thickness</quote> of the contour lines.  If <guilabel>Use variable line weight</guilabel>
is selected, contour lines representing higher elevations are drawn thicker than those representing lower elevations.
Use discretion when selecting this option, as images with high contour line densities may become unreadable.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>
</sect2>
</sect1>

<sect1 id="datamanager">
<title>The Data Manager</title>
<para>
The Data Manager provides a central location for adding, deleting, and modifying all the data objects used in &kst;.
It can be accessed by selecting <guimenuitem>Data Manager</guimenuitem> from the <guimenu>Data</guimenu> menu.
</para>
<sect2 id="creatingdata">
<title>Creating New Data Objects</title>
<para>
To create a new data object from the Data Manager, click on one of the buttons listed under <guilabel>New:</guilabel>.
A new window will be displayed, allowing options and settings for the data object to be set.</para>

<tip><para>You can also create new data objects which are based on vectors by right clicking on the corresponding vector and choosing one of the <guimenuitem>Make ...</guimenuitem> options</para></tip>

<para>
Since you are creating a new data object, you may enter a unique name to identify the object.  If you do not enter a custom name then a unique name will be automatically generated.
</para>

<para>
The settings for all plottable data objects except images have two common sections&mdash;Appearance and Placement
(images only have the Placement section).
These sections are described below.  For data-specific settings, see <link linkend="datatypes">Data Types</link>.
</para>


<sect3 id="curveappearance">
<title>Appearance</title>
<para>
The Appearance section allows you to change the appearance of the data object when it is plotted.
</para>

<screenshot>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-curveappearance.png" format="PNG"/>
</imageobject>
</mediaobject>
</screenshot>

<variablelist>

<varlistentry>
<term>
<inlinemediaobject><imageobject><imagedata fileref="Widget-kst-colourchooser.png" format="PNG"/></imageobject></inlinemediaobject>
</term>
<listitem>
<para>
Clicking this button displays a colour chooser dialog box, which can be used to change the colour of
both the lines and points.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Show points</guilabel>
</term>
<listitem>
<para>
Selecting this checkbox shows the data points used to plot the data object.  The drop-down list to the right
allows the shape of the points to be changed.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Show lines</guilabel>
</term>
<listitem>
<para>
Selecting this checkbox shows the lines joining the data points for the data object.  The thickness of the line
as well as the line style can be changed.
</para>
</listitem>
</varlistentry>

</variablelist>


</sect3>

<sect3 id="curveplacement">
<title>Placement</title>
<para>
The Placement section specifies the plotting location of new plottable data objects.
</para>

<screenshot>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-curveplacement.png" format="PNG"/>
</imageobject>
</mediaobject>
</screenshot>

<variablelist>

<varlistentry>
<term>
<guilabel>Plot window</guilabel>
</term>
<listitem>
<para>
Specify the window in which to plot the data object.  You may create a new window by clicking the <guibutton>New...</guibutton> button.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Place in existing plot</guilabel>, <guilabel>Place in new plot</guilabel>
and <guilabel>Do not place in any plot</guilabel>
</term>
<listitem>
<para>
You can choose whether or not to immediately plot the data object on a new or existing plot.  If
<guilabel>Place in new plot</guilabel> is selected, you can also choose to re-arrange the layout of the
plots by selecting <guilabel>re-grid</guilabel> and entering the number of columns to use for the
new layout grid.
</para>
</listitem>
</varlistentry>

</variablelist>

<para>
Once all the desired settings for the new data object have been set, click the <guibutton>OK</guibutton>
button to create the new data object.
</para>

</sect3>

</sect2>

<sect2 id="editinganddeletingdata">
<title>Editing and Deleting Existing Data Objects</title>
<para>
To edit an existing data object, simply highlight it in the Data Manager window and click the <guibutton>Edit</guibutton>
button.  The settings window for the selected object will be displayed.  This window is identical to the one displayed
when creating new data objects (with the exception that the Placement section may be absent), so refer to <link linkend="creatingdata">Creating New Data Objects</link> for more information
on the settings and options.
</para>
<para>
To delete a data object, highlight it in the Data Manager window and click the <guibutton>Delete</guibutton> button.
Note that if the <guilabel>Used</guilabel> column for a data object has a check-mark then some other data or view object in &kst; has a dependency on it. Depending on the strength of these dependencies, &kst; will prompt before an object is deleted. If, for example, other objects have critical dependencies on the one which you are attempting to delete, &kst; will ask if you would like to delete these other objects as well, to prevent crashes from occuring. Listed below are some consequencies of these dependencies to keep in mind when attempting to delete data objects.
</para>

<itemizedlist>
<listitem>
<para>
Plots are not critically dependent on the plottable objects which they contain, so if a plotted object is deleted &kst; will automatically remove it from all plots, without prompting.
</para>
</listitem>

<listitem>
<para>
All data objects that use a particular data vector must be deleted before the data vector itself can be deleted.
</para>
</listitem>

<listitem>
<para>
All children of a parent data object must be unused before the parent data object can be deleted.
</para>
</listitem>
</itemizedlist>

<para>
After a sequence of deletions and removals of plottable data objects from plots, you may find that there are numerous unused data objects displayed in the Data Manager.  To quickly remove these objects, you can click the <guibutton>Purge</guibutton> button.
</para>
</sect2>
</sect1>

<sect1 id="datatools">
<title>Data Tools</title>

<sect2 id="thedatamenu">
<title>The Data Menu</title>
<para>
The <guimenu>Data</guimenu> menu provides quick access to many features related to data objects in
&kst;.  Most of the menu functions duplicate functions found elsewhere, so only brief descriptions are
provided below.
</para>
<variablelist>
<varlistentry>
<term><guimenuitem>Reload</guimenuitem></term>
<listitem>
<para>
Reloads all data vectors from their source files.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Data Manager</guimenuitem></term>
<listitem>
<para>
Displays the <link linkend="datamanager">Data Manager</link>.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Manager</guimenuitem></term>
<listitem>
<para>
Displays the <link linkend="viewmanager">View Manager</link>.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>New</guimenuitem> [data object]</term>
<listitem>
<para>
Displays the corresponding dialog for creating the data object. Refer to
<link linkend="datatypes">Data Types</link> for descriptions of
each dialog.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Scalar Values</guimenuitem></term>
<listitem>
<para>
Displays a dialog from which the values of all the scalars in the current &kst; session
can be viewed. The dialog is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Vector Values</guimenuitem></term>
<listitem>
<para>
Displays a dialog from which the values in all the current vectors can be viewed. Select
a vector to view using the drop-down list. The dialog
is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Matrix Values</guimenuitem></term>
<listitem>
<para>
Displays a dialog from which the values in all the current matrices can be viewed. Select
a matrix to view using the drop-down list. The dialog
is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Fit Results</guimenuitem></term>
<listitem>
<para>
Displays a dialog which shows all the resulting values from fit plugins. Select
a fit result to view using the drop-down list. The dialog
is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect2>

<sect2 id="datamode">
<title>Data View Mode</title>
<para>Data mode allows precise viewing of the data points used in a plotted data object.  To toggle data mode,
select <guimenuitem>Data Mode</guimenuitem> from the <guimenu>Plots</guimenu> menu. Now, when the cursor
is moved over a plot, a coloured dot will indicate the closest data point to the cursor, as shown in the
screenshot below.  The status bar will
display the coordinates of the data point (in terms of the x and y vectors used to plot the data object) in status bar at the
lower right corner of the &kst; window.
The status bar will also display the x, y, and z coordinates of any visible image.  If images overlap, only the coordinates of the
topmost image will be displayed.
Note that all zooming functions are still available while in data mode.
</para>
<screenshot>
<screeninfo>Top of Plot Dialog</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datamode.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Top of Plot Dialog</phrase>
</textobject>
</mediaobject>
</screenshot>
<tip>
<para>
If the status bar is not visible, make sure <guimenuitem>Show Statusbar</guimenuitem> is checked in the
<guimenu>Status</guimenu> menu.
</para>
</tip>
</sect2>

<sect2 id="changedatafile">
<title>Change Data File</title>
<para>
One common mode of using &kst; is to create a 'session' of plots and analysis for a particular type of data. Then, the same plots and analyses can be performed easily on another set of similar data simply by changing the files from which &kst; pulls its data. This is easily done using the <guimenuitem>Change Data File</guimenuitem> menu item from the <guimenu>Tools</guimenu>, the dialog which appears is shown below:
</para>

<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-changedatafile.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

<para>
To use this dialog, select the vectors which you would like to change the data file of using the list in the middle of the dialog. The All From, Clear, Select All, and search fields can help you to do this. Then, select a new data file. If the "Change selected vectors and matrices" radio button is selected, then when you press Apply or OK the selected data vectors will have their data file changed, and will be reloaded. If the "Duplicate selected vectors and matrices" option is selected, then new vectors will be created which have the same ranges and sampling rates as the ones selected, but pull their data from the new file. If some of the selected vectors have dependents (curves, spectra, histograms, etc.) then the "Duplicate dependents" option will allow you to duplicate these other objects as well.
</para>
</sect2>

<sect2 id="changedatasampleranges">
<title>Change Data Sample Ranges</title>
<para>
The <guimenuitem>Change Data Sample Ranges</guimenuitem> dialog can be accessed through the <guimenu>Tools</guimenu>. It allows you to modify how a set of vectors are read in from their associated files. The options are detailed in the <link linkend="datarange">Data Range</link> section of the <link linkend="datawizard">Data Wizard</link> documentation.
</para>

<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-changesampleranges.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

</sect2>
</sect1>

<sect1 id="fileformats">
<title>Supported File Formats</title>
<para>
Currently, Kst supports <link linkend="creatingascii">ASCII</link> text files, BOOMERANG frame files, <link linkend="blastdirfiles">BLAST</link> dirfiles, PLANCK LFIIO files, and QImage files as data sources, as well as PIOLib, HEALPix, and FITS files if the appropriate libraries are present.
</para>

<sect2 id="creatingascii">
<title>ASCII Input Files</title>
<para>
The simplest input file format is the ASCII text file.  These files are usually human-readable and
can be easily created by hand or simple scripts if desired.  The following is an example of an ASCII input file.
</para>

<informalexample>
<screen>
112.5 3776 428
187.5 5380 429
262.5 5245 345
337.5 2942 184
412.5 1861 119
487.5 2424 138
567.5 2520 162
637.5 1868 144
712.5 1736 211
787.5 1736 211
862.5 2172 292
937.5 1174 377
1000.5 499 623
</screen>
</informalexample>

<para>
Each column of this file represents a field, while each row represents one frame.
Columns are separated by tabs or spaces, and rows are separated by carriage returns.
Note that due to their structure, ASCII files cannot have multiple samples per frame.
If the columns do not have labels, field names are assigned by &kst; based on the
order of the columns (with the leftmost column having a field name of <literal>1</literal>).
</para>

<para>
Commented lines in ASCII files start with one of the characters in the set
<literal>{#, !, /, ;, c}</literal>.  All commented lines and empty lines
are ignored by &kst;.  Valid numbers include those with decimals, negative signs,
or <literal>e</literal>, to indicate scientific notation. Invalid numbers (such as
English words) are replaced with 0 by &kst;.
</para>

</sect2>


<sect2 id="blastdirfiles">
<title>BLAST Dirfiles</title>
<para>
BLAST dirfile data sources are actually directories of files.  Each directory represents
one data source, and each file in the directory, with the exception of a file called
<filename>format</filename>, represents a single field. The file named <filename>format</filename>
lists each field and its properties.  Below is example of such a file:
</para>
<informalexample>
<screen>scount RAW f 1
fcount RAW f 20
sine RAW f 20
ssine RAW f 1
cos RAW f 20</screen>
</informalexample>
<para>
In this example, <literal>scount</literal>, <literal>fcount</literal>, <literal>sine</literal>,
<literal>ssine</literal>, and <literal>cos</literal> are field names.  <literal>RAW</literal> indicates
the file is written in raw format, and the last number in each row is the number of samples per frame.
</para>

<para>
When selecting a BLAST dirfile for use in &kst;, the directory containing the field files should be
selected. &kst; will then automatically look for a <filename>format</filename> file, if it exists,
to determine the fields and their properties.
</para>
</sect2>

<sect2 id="healpix">
<title>HEALPix FITS files</title>
<para>
HEALPix is a pixelisation scheme for the sphere. More information can be found at <ulink url="http://healpix.jpl.nasa.gov/">http://healpix.jpl.nasa.gov/</ulink>. HEALPix data should typically be loaded into &kst; as a matrix. An image of a sample HEALPix matrix is shown below:
</para>

<screenshot>
<screeninfo>HEALPix example</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-healpixexample.png" format="PNG" />
</imageobject>
</mediaobject>
</screenshot>

<para>
Here is the configuration dialog for the HEALPix data source, an explanation of the possible options is given underneath:
</para>

<screenshot>
<screeninfo>HEALPix example</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-healpixconfigure.png" format="PNG" />
</imageobject>
</mediaobject>
</screenshot>

<variablelist>

<varlistentry>
<term>Dimensions</term>
<listitem>
<para>
The size of the matrix to create based on the HEALPix data. The larger the matrix, the higher the resolution. If you choose dimensions which are larger than the resolution of the data in the HEALPix file, you will be able to see the shape of the HEALPix pixels in the image of the matrix.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>Theta / Phi Range</term>
<listitem>
<para>
The colatitude / azimuth range of data to extract.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>Theta / Phi Range</term>
<listitem>
<para>
The colatitude / azimuth range of data to extract.
</para>
</listitem>
</varlistentry>

<!--FIXME: vectors don't work? -->
</variablelist>

</sect2>

<sect2 id="qimage">
<title>QImage</title>
<para>
The QImage datasource allows you to read image data into &kst; matrices from a variety of formats. The collection of supported formats depends on the libraries installed on your system, but most popular formats are generally readable. If you'd just like to add a picutre to a plot, then the <link linkend="pictures">Picture</link> annotation object is a better choice to use. An example of an image plotted from a QImage sourced matrix is shown below:
</para>
<screenshot>
<screeninfo>QImage example</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-data-qimageexample.png" format="PNG" />
</imageobject>
</mediaobject>
</screenshot>
</sect2>

<sect2 id="wmap">
<title>WMAP Reader</title>
<para>
This datasource allows you to load vectors from WMAP Time Ordered Data (TOD) files. For more information, see <ulink url="http://lambda.gsfc.nasa.gov/">http://lambda.gsfc.nasa.gov/</ulink>. 
</para>
</sect2>

</sect1>


</chapter>


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:0
sgml-indent-data:true
sgml-parent-document:("index.docbook" "book" "chapter")
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
